name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main # o master, a seconda del nome della tua branch principale

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.147.3 # Specifica la versione di Hugo (usa la stessa che hai localmente, o una recente)
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive # Necessario se il tema è un sottomodulo
          fetch-depth: 0 # Necessario per lastmod
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Setup Node.js # È buona pratica specificare la versione di Node
        uses: actions/setup-node@v3
        with:
          node-version: '18' # O una versione LTS recente che il tema supporta
      - name: Install Node.js dependencies
        # Se il package.json è nella root del tema (es. themes/ananke)
        working-directory: themes/ananke # << MODIFICA 'ananke' CON IL NOME DELLA CARTELLA DEL TUO TEMA
        run: "[[ -f package-json.lock || -f npm-shrinkwrap.json ]] && npm ci --legacy-peer-deps || npm i --legacy-peer-deps"
        # Nota: ho modificato un po' il comando run:
        # 1. Usare package-json.lock (più comune di package-lock.json in alcuni contesti)
        # 2. Aggiunto --legacy-peer-deps che spesso aiuta con i temi Hugo più vecchi
        # 3. Aggiunto un fallback a `npm i` se `npm ci` fallisce o non c'è un lockfile.

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4